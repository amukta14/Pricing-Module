# Generated by Django 5.2.2 on 2025-06-10 06:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PricingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name/identifier for this pricing configuration', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this pricing configuration')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this configuration is currently active')),
                ('applicable_days', models.JSONField(help_text='Days of week this configuration applies to. JSON format: ["monday", "tuesday", ...]')),
                ('base_distance_km', models.DecimalField(decimal_places=2, help_text='Base distance in KM (e.g., 3.0 for first 3 KM)', max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base price for the base distance (e.g., 80 INR for first 3 KM)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('additional_price_per_km', models.DecimalField(decimal_places=2, help_text='Price per KM after base distance (e.g., 30 INR/KM)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('time_multiplier_tiers', models.JSONField(help_text='Time multiplier tiers. JSON format: [{"max_hours": 1, "multiplier": 1.0}, {"max_hours": 2, "multiplier": 1.25}]')),
                ('waiting_free_minutes', models.IntegerField(default=3, help_text='Free waiting time in minutes (e.g., first 3 minutes are free)', validators=[django.core.validators.MinValueValidator(0)])),
                ('waiting_charge_per_interval', models.DecimalField(decimal_places=2, help_text='Charge per interval after free time (e.g., 5 INR per 3 minutes)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('waiting_interval_minutes', models.IntegerField(default=3, help_text='Waiting charge interval in minutes (e.g., charged every 3 minutes)', validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pricing_configs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_pricing_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pricing Configuration',
                'verbose_name_plural': 'Pricing Configurations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PricingConfigurationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Created'), ('UPDATE', 'Updated'), ('DELETE', 'Deleted'), ('ACTIVATE', 'Activated'), ('DEACTIVATE', 'Deactivated')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('previous_state', models.JSONField(blank=True, help_text='State before the change', null=True)),
                ('new_state', models.JSONField(blank=True, help_text='State after the change', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the change')),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pricing_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='pricing.pricingconfiguration')),
            ],
            options={
                'verbose_name': 'Pricing Configuration Log',
                'verbose_name_plural': 'Pricing Configuration Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RideCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_hours', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waiting_minutes', models.IntegerField(default=0)),
                ('day_of_week', models.CharField(max_length=10)),
                ('base_price_component', models.DecimalField(decimal_places=2, max_digits=10)),
                ('additional_distance_component', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_multiplier_component', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waiting_charges_component', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('calculated_by', models.CharField(blank=True, help_text='API user or system identifier', max_length=100)),
                ('pricing_config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.pricingconfiguration')),
            ],
            options={
                'verbose_name': 'Ride Calculation',
                'verbose_name_plural': 'Ride Calculations',
                'ordering': ['-calculated_at'],
            },
        ),
    ]
